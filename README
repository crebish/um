Universal Machine Profiling
4/16/2025

Andrea Cabochan
Chance Rebish
========================================================

========================================================
Acknowlegdments 
========================================================

Shoutout to Dan, Ben, and Rachel!

========================================================
Section 2.4 
========================================================

Once you’ve found the place where the most time is spent, examine the assembly code and either identify
specific ways (changes to to the assembly code itself) in which it could be improved or argue that there is
not an obvious way to improve the assembly code.

Things to look for include:
• Do you see opportunities to keep data in registers, where currently there are unnecessary memory
accesses?
• Do you see unnecessary computation in loops?

Be alert for a horrible idiom in the Intel assembly language: the instruction
mov %esi, %esi
looks redundant, but it’s not. This idiom stands for an instruction that zeroes out the most significant 32 bits
of the 64-bit register %rsi. We on the CS 40 staff think this is a bad bit of language design, but do watch
out for it.
For this assignment, there is no need to modify assembly code.




========================================================
Hours Spent Analyzing Problem  
========================================================

~5 hours

========================================================
Hours Spent Solving Problem  
========================================================

~7 hours